
###################    GBM    Score-81.6%  ########################################

library(readr)
train = read_csv(file = "F:\\Desktop1\\Padhai Likhai\\Kaggle Competition\\Homesite\\train.csv")
test = read_csv(file = "F:\\Desktop1\\Padhai Likhai\\Kaggle Competition\\Homesite\\test.csv")

M <- sapply(train, function(x) sum(is.na(x))) #Making a list M of variables with missing values
M[M>0]  #CHecking variables with NA missing values greater than zero

MT <- sapply(test, function(x) sum(is.na(x)))
MT[MT>0]

str(train$PersonalField84)
str(train$PropertyField29)

#Removing the columns with missing values and date columns
train$PersonalField84 = NULL
train$PropertyField29 = NULL
test$PersonalField84 = NULL
test$PropertyField29 = NULL
train$Original_Quote_Date = NULL
test$Original_Quote_Date = NULL

#Checking out the classes of different variables
sapply(train, function (x) class(x))

#Changing the character variables into factors
train[sapply(train, is.character)] = lapply(train[sapply(train, is.character)], as.factor)
test[sapply(test, is.character)] = lapply(test[sapply(test, is.character)], as.factor)


library(gbm)
boost = gbm(QuoteConversion_Flag ~., data=train, n.trees=1000, shrinkage = 0.01, distribution = "bernoulli", interaction.depth = 4)
summary(boost)

pred.boost1 = predict(boost, newdata = test, n.trees=1000, type="response")

#Converting the probablities into zeroes & ones
Pred.boostR = ifelse(pred.boost >= 0.5, 1,0)

QuoteNumber = test$QuoteNumber
submission = data.frame(QuoteNumber, Pred.boostR)
colnames(submission) = c("QuoteNumber", "QuoteConversion_Flag")

write_csv(submission, "submit_boost.csv")



#############################   h2o   GLM Score 74%    ######################


library(h2o)
h2o.init()

train = file.path(file = "F:\\Desktop1\\Padhai Likhai\\Kaggle Competition\\Homesite\\train.csv")
test = file.path(file = "F:\\Desktop1\\Padhai Likhai\\Kaggle Competition\\Homesite\\test.csv")



train_hex = h2o.importFile(path = train, destination_frame = "train_hex")
test_hex = h2o.importFile(path = test, destination_frame = "test_hex")

summary(train_hex)

Y = "QuoteConversion_Flag"
X = c("Field6","Field7","Field8","Field9","Field10","Field11","Field12","CoverageField1A","CoverageField1B",     
      "CoverageField2A","CoverageField2B","CoverageField3A","CoverageField3B",     
      "CoverageField4A","CoverageField4B","CoverageField5A","CoverageField5B",     
      "CoverageField6A","CoverageField6B","CoverageField8","CoverageField9",      
      "CoverageField11A","CoverageField11B","SalesField1A","SalesField1B",        
      "SalesField2A","SalesField2B","SalesField3","SalesField4",         
      "SalesField5", "SalesField6","SalesField7","SalesField8",         
      "SalesField9","SalesField10","SalesField11","SalesField12",        
      "SalesField13","SalesField14","SalesField15","PersonalField1")


train.glm <- h2o.glm(training_frame=train_hex, x=X, y=Y, family = "binomial")
summary(train.glm)


pred = as.data.frame(h2o.predict(object = train.glm, newdata = test_hex))
names(pred)
table(pred$predict)

test1 = read.csv(file = "F:\\Desktop1\\Padhai Likhai\\Kaggle Competition\\Homesite\\test.csv")
submission = data.frame(QuoteNumber= test1$QuoteNumber, QuoteConversion_Flag=pred$predict)
options(scipen = 3)
library(readr)
write_csv(submission, "h2oGLM3.csv")
